package utils;

import junit.framework.TestCase;
import org.junit.Assert;

import java.math.BigDecimal;
import java.math.BigInteger;

public class HighPrecisionUtilsTest extends TestCase {

    public void testBigIntegerDivide() {
        BigInteger bigInteger1 = new BigInteger("31533720747542392100088484900237707062978317646280193063170540644840627843299568608628629144996287983737742167201669254085998905766441025361696462237955720711243816558387860420569382274432809162274346721093991074739166860855668467325798732162968440200104222322106115577892986922560797564883068809340641572027143621531307986405695163672414154544641487932048067021751173605004072140355783370735658144252870453127863558369330612876208191901947563074973060392748932637800597038195652030881837187661691148215946673023012417468323866371261803559927033692366412259261209992718333459804932524790064081062350473031044291285615836674517668660049620501718553835242819395069321728383239913795939215432553336240927247944457587082886030259105128833232599462811456928656416972205209348136197559684218010456639208289942969120578686653869358784790582152268364297230612903680796395889075881413236929021059841943679426151724362170239755676902559563874971965703464865706917412035846149486803759860524984904016548814998091347955951379362338238847238136340528812290981073864834272246138766366403148849785344029385018829864051667732022380371049345875775631118632132501810074258426289420511188209291037722075039779010547064593251724204587635884399449513352419477968311540921334470577837946789820306494672401671430869998660133556007974443803294462157329582334991247290731037064354288356675215668691379726400704020608788810006719740099887978931102027574028328451943038140356710120167558766516650135986219790396028260392841897776191668637290219562624232035687398799034944105951416393277818041098117429150866693733667416410190916103830752826790452600935710943092244911335691127577696926477996077197672550482365457125752577879789948702");
        BigInteger bigInteger2 = new BigInteger("31533720747542392100088484900237707062978317646280193063170540644840627843299568608628629144996287983737742167201669254085998905766441025361696462237955720711243816558387860420569382274432809162274346721093991074739167105534289131723360626340018534598355096872184438465554600072171275476088463251831840023960052635476295744127523400047541854767894736968457827363682657274986348805254331393779615146867808865732819845317020997405965960154104461686811509600578835236213421279484160040580607214928137836987955075365609323812985000103190969676819485578299932588379906131331993589390824178421734246542114061949238386634452646130431011182991308822499666867199301307660239657381891331839117212200926198382878982248266767566858428537256929677519127814641352153152236701699622394011495481720991909444858542884284193835172409327776676506423389224285722787362613190735940165092391003316425014849455705060002091808241817936103509257869584598421200763689516650499116494086439228802767087293485287736489776808475849025488491910833428698948041025390880175808691376030267768882769978188695521731050238850863434183849490125665846028972828903479636718599364743172832793360036249301020343688028686860472916703673631475349063536896462526018977785600059442906032759917019746650569413792960781026532460561852010437160502441337114426972683149192607148930701720767873994554077502508977029352976084310779422194338786412506374045596576362683795940179668784066723005781216914622225570083025372006581820918067208917821536778417917798236408103017771317908351683989526488419139117293151131786178710250984230553090855962359413012771393831389612779736993961278747253616822157748518831923104989245638606568777706052503449485868088438594953");
        BigDecimal ret = HighPrecisionUtils.bigIntegerDivide(bigInteger1, bigInteger2, bigInteger2.toString().length());
        Assert.assertNotEquals(ret, BigDecimal.ONE);
        System.out.println(ret);
    }

}